{"version":3,"sources":["./src/environments/environment.ts","./src/app/session-storage/session-storage.component.html","./src/app/session-storage/session-storage.component.ts","./src/app/app.routes.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/local-storage/local-storage.component.html","./src/app/local-storage/local-storage.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"container\">\n  <h2>session-storage.component:</h2>\n\n  <a\n    href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage\"\n    >https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage</a\n  >\n  <p style=\"color: blue\">\n    window.sessionStorage: là biến global luôn ở TypeScript.\n    <br />\n    + bản chất là 1 HashMap. cùng chùng Storage interface với\n    window.localStorage => dùng giống hệt\n    <br />\n    + khác biệt ở chỗ nó chỉ có tác dụng trong 1 browser window tab thôi (các\n    tab khác nhau sẽ khác nhau)\n    <br />\n    + khi reload URL trên window Tab thì window.localStorage và\n    window.sessionStorage ko bị xóa (tested)\n  </p>\n  <p>\n    + xóa window.localStorage ở Browser cookies\n    <br />\n    + mở browser tab khác để xem kết quả\n    <br />\n    + reload URL trên window tab address bar để xem kết quả\n    <br />\n    + test với Browser khác (chrome, edge, firefox)\n  </p>\n\n  <h3>store.length = {{ store.length }}</h3>\n  <h3>store.keys = {{ keys | json }}</h3>\n\n  <h3 *ngIf=\"key1 == null\">key1 = null</h3>\n\n  <h3 *ngIf=\"key1 != null\">key1 = {{ key1 }}</h3>\n\n  <button (click)=\"onSetItem()\">store.setItem(key, value)</button>\n\n  <button (click)=\"onGetItem()\">store.getItem(key)</button>\n\n  <button (click)=\"onRemoveItem()\">store.removeItem(key)</button>\n\n  <div>\n    <button (click)=\"onSetItem2()\">add key2,key3, key4</button>\n    <button (click)=\"onGetKeys()\">store.key(n)</button>\n    <button (click)=\"onClear()\">store.clear()</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-session-storage',\n  templateUrl: './session-storage.component.html',\n  styleUrls: ['./session-storage.component.scss'],\n})\nexport class SessionStorageComponent implements OnInit {\n  constructor() {}\n\n  key1: string = '';\n\n  store: any;\n\n  /**\n   * window.localStorage và window.sessionStorage cùng interface là Storage\n   *\n   * store.length\n   * store.key(index):\n   * store.getItem(key)\n   * store.setItem(key, value)\n   * store.removeItem(key)\n   *\n   * store.clear()\n   */\n  ngOnInit(): void {\n    /**\n     * Ctrl + click: jump code để xem các function của nó\n     *\n     * window.localStorage và window.sessionStorage cùng interface là Storage\n     */\n    this.store = window.sessionStorage;\n\n    /**\n     * store: là biến toàn cục bỏ \"window.\" vẫn ok\n     */\n\n    this.showAll();\n  }\n\n  index: number = 1;\n  public onSetItem() {\n    this.index++;\n\n    // save data vào store\n    this.store.setItem('key1', 'value' + '-' + this.index);\n\n    //show value\n    this.onGetItem();\n    this.onGetKeys();\n    this.onGetItem();\n  }\n\n  public onSetItem2() {\n    // save data vào store\n    this.store.setItem('key2', 'value2');\n    this.store.setItem('key3', 'value3');\n    this.store.setItem('key4', 'value4');\n    this.store.setItem('key5', 'value5');\n\n    //show value\n    //để show các key lưu ở store\n    this.showAll();\n  }\n\n  public onGetItem() {\n    // lấy data store\n    this.key1 = <string>this.store.getItem('key1');\n  }\n\n  public onRemoveItem() {\n    //remove from store\n    this.store.removeItem('key1');\n\n    //show value\n    this.showAll();\n  }\n\n  keys?: Array<string>;\n\n  //để show các key lưu ở store\n  public onGetKeys() {\n    this.keys = []; //reset\n\n    for (let i = 0; i < this.store.length; i++) {\n      this.keys.push(<string>this.store.key(i));\n    }\n  }\n\n  public onClear() {\n    this.store.clear();\n\n    //để show các key lưu ở store\n    this.showAll();\n  }\n\n  // cập nhật lại thông tin của window.localStorage\n  public showAll() {\n    //show value\n    this.onGetItem();\n    this.onGetKeys();\n    this.onGetItem();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'g12-local-session-storage';\n}\n","<app-local-storage></app-local-storage>\n\n<app-session-storage></app-session-storage>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app.routes';\nimport { AppComponent } from './app.component';\nimport { SessionStorageComponent } from './session-storage/session-storage.component';\nimport { LocalStorageComponent } from './local-storage/local-storage.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SessionStorageComponent,\n    LocalStorageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"container\">\n  <h2>local-storage.component:</h2>\n\n  <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Storage\"\n    >https://developer.mozilla.org/en-US/docs/Web/API/Storage</a\n  >\n  <p>\n    window.localStorage: là biến global luôn ở TypeScript.\n    <br />\n    + bản chất là 1 HashMap => dùng giống vậy, chỉ khác tên method\n    <br />\n    + window.localStorage: Browser hỗ trợ lưu data cho 1 domain ở local\n    <br />\n    + các window tab của cùng 1 domain đều read/write đc vào localStorage\n    <br />\n    + domain khác ko thể truy cập đc => xem ở cookies của browser sẽ thấy\n    <br />\n    + khi reload URL thì window.localStorage và window.sessionStorage ko bị xóa\n    (tested)\n  </p>\n  <p>\n    + xóa window.localStorage ở Browser cookies\n    <br />\n    + mở browser tab khác để xem kết quả\n    <br />\n    + reload URL trên window tab address bar để xem kết quả\n    <br />\n    + test với Browser khác (chrome, edge, firefox)\n  </p>\n\n  <h3>localStorage.length = {{ store.length }}</h3>\n  <h3>localStorage.keys = {{ keys | json }}</h3>\n\n  <h3 *ngIf=\"key1 == null\">key1 = null</h3>\n\n  <h3 *ngIf=\"key1 != null\">key1 = {{ key1 }}</h3>\n\n  <button (click)=\"onSetItem()\">localStorage.setItem(key, value)</button>\n\n  <button (click)=\"onGetItem()\">localStorage.getItem(key)</button>\n\n  <button (click)=\"onRemoveItem()\">localStorage.removeItem(key)</button>\n\n  <div>\n    <button (click)=\"onSetItem2()\">add key2,key3, key4</button>\n    <button (click)=\"onGetKeys()\">localStorage.key(n)</button>\n    <button (click)=\"onClear()\">localStorage.clear()</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-local-storage',\n  templateUrl: './local-storage.component.html',\n  styleUrls: ['./local-storage.component.scss'],\n})\nexport class LocalStorageComponent implements OnInit {\n  constructor() {}\n\n  key1: string = '';\n\n  store: any;\n\n  /**\n   * localStorage.length\n   * localStorage.key(index):\n   * localStorage.getItem(key)\n   * localStorage.setItem(key, value)\n   * localStorage.removeItem(key)\n   *\n   * localStorage.clear()\n   */\n  ngOnInit(): void {\n    /**\n     * Ctrl + click: jump code để xem các function của nó\n     *\n     *  window.localStorage và window.sessionStorage cùng interface là Storage\n     */\n    this.store = window.localStorage;\n\n    /**\n     * localStorage: là biến toàn cục bỏ \"window.\" vẫn ok\n     */\n\n    this.showAll();\n  }\n\n  index: number = 1;\n  public onSetItem() {\n    this.index++;\n\n    // save data vào localStorage\n    localStorage.setItem('key1', 'value' + '-' + this.index);\n\n    this.showAll();\n  }\n\n  // cập nhật lại thông tin của window.localStorage\n  public showAll() {\n    //show value\n    this.onGetItem();\n    this.onGetKeys();\n    this.onGetItem();\n  }\n\n  public onSetItem2() {\n    // save data vào localStorage\n    localStorage.setItem('key2', 'value2');\n    localStorage.setItem('key3', 'value3');\n    localStorage.setItem('key4', 'value4');\n    localStorage.setItem('key5', 'value5');\n\n    //show value\n    //để show các key lưu ở localStorage\n    this.showAll();\n  }\n\n  public onGetItem() {\n    // lấy data localStorage\n    this.key1 = <string>localStorage.getItem('key1');\n  }\n\n  public onRemoveItem() {\n    //remove from localStorage\n    localStorage.removeItem('key1');\n\n    //show value\n    this.showAll();\n  }\n\n  keys?: Array<string>;\n\n  //để show các key lưu ở localStorage\n  public onGetKeys() {\n    this.keys = []; //reset\n\n    for (let i = 0; i < localStorage.length; i++) {\n      this.keys.push(<string>localStorage.key(i));\n    }\n  }\n\n  public onClear() {\n    localStorage.clear();\n\n    //để show các key lưu ở localStorage\n    this.showAll();\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}